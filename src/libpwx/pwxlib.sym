/***
  This file is part of the PrydeWorX Library.

  The PrydeWorX Library is free software; you can redistribute it
  and/or modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.
***/

LIBPWX_0_8_99 {
global:
    extern "C++" {
        /* Classes */
        pwx::CAdjLeft::*;
        pwx::CAdjRight::*;
        pwx::CArgHandler::*;
        pwx::CException::*;
        pwx::CFormat::*;
        pwx::CHashBuilder::*;
        pwx::CLockable::*;
        pwx::CLockGuard::*;
        pwx::CRandom::*;
        pwx::CSinCosTable::*;
        pwx::CWaveColor::*;

        /* Templates */
        pwx::TChainHash::*;
        pwx::TDoubleElement::*;
        pwx::TDoubleList::*;
        pwx::TDoubleRing::*;
        pwx::THashElement::*;
        pwx::TOpenHash::*;
        pwx::TQueue::*;
        pwx::TSet::*;
        pwx::TSingleElement::*;
        pwx::TSingleList::*;
        pwx::TSingleRing::*;
        pwx::TStack::*;
        pwx::TVarDeleter::*;

        /* Functions */
        pwx::are_locked*;
        pwx::cropShell*;
        pwx::debug_log*;
        pwx::debug_err*;
        pwx::forwardTo*;
        pwx::get_trace_info*;
        pwx::get_trace_msg*;
        pwx::ltrim*;
        pwx::makeTemp*;
        pwx::readNextValue*;
        pwx::rtrim*;
        pwx::skipLineBreak*;
        pwx::tabToSpace*;
        pwx::to_bool*;
        pwx::to_double*;
        pwx::to_int8*;
        pwx::to_int16*;
        pwx::to_int32*;
        pwx::to_int64*;
        pwx::to_float*;
        pwx::to_long_double*;
        pwx::to_string*;
        pwx::to_uint8*;
        pwx::to_uint16*;
        pwx::to_uint32*;
        pwx::to_uint64*;
        pwx::trim*;
        pwx::try_locks*;
        pwx::unlock_all*;

        /* Templated functions */
        pwx::absDistance*;
        pwx::areAlmostEqual*;
        pwx::degToRad*;
        pwx::getNormalizedDegree*;
        pwx::set_difference*;
        pwx::set_intersection*;
        pwx::set_union*;

        /* Operators */
        "pwx::operator<<(std::ostream&, pwx::CAdjLeft const&)";
        "pwx::operator<<(std::ostream&, pwx::CAdjRight const&)";
        "pwx::operator++(pwx::eNameSourceType&)";
        "pwx::operator++(pwx::eNameSourceType&, int)";
        "pwx::operator--(pwx::eNameSourceType&)";
        "pwx::operator--(pwx::eNameSourceType&, int)";

        /* Global workers */
        pwx::PAH;
        pwx::SCT;
        pwx::RNG;

        /* Virtual Base Classes - will be skipped by test_libpwx_sym */
        pwx::VContainer::*;
        pwx::VElement::*;

        /* Private symbols, (visibility=hidden) that the other symbols */
        /* might depend upon. Will be skipped by test_libpwx_sym */
        pwx::private_::CThreadElementStore::*;

        /* Type information and virtual tables - will be skipped by test_libpwx_sym */
        typeinfo*for?pwx::*;
        vtable*for?pwx::*;
    };
local:
    extern "C++" {
       *;
    };
};

LIBPWX_0_9_0 {
global:
    extern "C++" {
        pwx::finish*;
    };
} LIBPWX_0_8_99;
